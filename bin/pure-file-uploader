#!/usr/bin/env node

const app = require('../dist/main');
const minimist = require('minimist');
const colors = require('colors/safe');
const packageInfo = require('./../package.json');
const fs = require("fs");
const argv = minimist(process.argv.slice(2));

if (argv.h || argv.help) {
    console.log([
        'usage: pure-file-uploader',
        '',
        'options:',
        '  -p --port    Port to use [8080]',
        '  -t --target  Path to folder to store files',
        '  -v --view    Optional diffrent directory to display',
        '  -r --regex   Input json file with uploadedfilename regex',
        '',
        '  -h --help    Print this list and exit.'
    ].join('\n'));
    process.exit();
}

const port = argv.p || argv.port || parseInt(process.env.PORT, 10) || 8080;
const target = argv.t || argv.target || process.env.UPLOAD_TARGET || '/tmp/files'
const view = argv.v || argv.view || target;
const regex = JSON.parse(fs.readFileSync(argv.r || argv.regex || `${__dirname}/regex.json`));

console.log([
    colors.green('PURE FILE UPLOADER'),
    colors.blue('PPL 2021'),
    colors.yellow(`Uploader: http://localhost:${port}`),
    colors.yellow(`Uploaded files: http://localhost:${port}/uploaded`),
    '',
    `version: ${packageInfo.version} `
].join('\n'));

app.bootstrap(target, regex, port, view)

if (process.platform === 'win32') {
    require('readline').createInterface({
        input: process.stdin,
        output: process.stdout
    }).on('SIGINT', function () {
        process.emit('SIGINT');
    });
}

process.on('SIGINT', function () {
    console.info(colors.red('http-server stopped.'));
    process.exit();
});

process.on('SIGTERM', function () {
    console.info(colors.red('http-server stopped.'));
    process.exit();
});
